<?php

namespace Symfony\Bundle\MakerBundle\Maker\Security;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Bundle\MakerBundle\ConsoleStyle;
use Symfony\Bundle\MakerBundle\DependencyBuilder;
use Symfony\Bundle\MakerBundle\FileManager;
use Symfony\Bundle\MakerBundle\Generator;
use Symfony\Bundle\MakerBundle\InputConfiguration;
use Symfony\Bundle\MakerBundle\Maker\AbstractMaker;
use Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater;
use Symfony\Bundle\MakerBundle\Util\UseStatementGenerator;
use Symfony\Bundle\MakerBundle\Util\YamlSourceManipulator;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Authentication\AuthenticationUtils;

/**
 * WIP - Security System
 * @author Jesse Rushlow <jr@rushlow.dev>
 */
class MakeFormLogin extends AbstractMaker
{
    public function __construct(
        private FileManager $fileManager,
        private SecurityConfigUpdater $securityConfigUpdater,
    ) {
    }

    public static function getCommandName(): string
    {
        return 'make:security:form-login';
    }

    public function configureCommand(Command $command, InputConfiguration $inputConfig): void
    {
        // TODO: Implement configureCommand() method.
    }

    public static function getCommandDescription(): string
    {
        // TODO: Ya this needs to be better
        return 'Something better needs to go here';
    }

    public function configureDependencies(DependencyBuilder $dependencies): void
    {
        // TODO: Implement configureDependencies() method.
    }

    public function interact(InputInterface $input, ConsoleStyle $io, Command $command): void
    {
        // TODO: Change the autogenerated stub
    }

    public function generate(InputInterface $input, ConsoleStyle $io, Generator $generator): void
    {
        $useStatements = new UseStatementGenerator([
            AbstractController::class,
            Response::class,
            Route::class,
            AuthenticationUtils::class,
        ]);

        $controllerNameDetails = $generator->createClassNameDetails('LoginController', 'Controller\\', 'Controller');

        $generator->generateController(
            $controllerNameDetails->getFullName(),
            'security/formLogin/LoginController.tpl.php',
            ['use_statements' => $useStatements]
        );

        $generator->generateTemplate(
            'login/login.html.twig',
            'security/formLogin/login_form.tpl.php',
            [
                'logout_setup' => false,
                'username_field' => 'email',
                'username_label' => 'email',
                'username_is_email' => true
            ]
        );

        $manipulator = new YamlSourceManipulator($this->fileManager->getFileContents('config/packages/security.yaml'));
        $securityData = $this->securityConfigUpdater->updateForFormLogin($manipulator->getContents(), 'app_login', 'app_login');
        $generator->dumpFile('config/packages/security.yaml', $securityData);

        $generator->writeChanges();
    }

    public function __call(string $name, array $arguments)
    {
        // TODO: Implement @method string getCommandDescription()
    }
}
